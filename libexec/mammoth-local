#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific PHP version
#
# Usage: mammoth local <version>
#        mammoth local --unset
#
# Sets the local application-specific PHP version by writing the
# version name to a file named `.php-version'.
#
# When you run a PHP command, mammoth will look for a `.php-version'
# file in the current directory and each parent directory. If no such
# file is found in the tree, mammoth will use the global PHP version
# specified with `mammoth global'. A version specified with the
# `MAMMOTH_VERSION' environment variable takes precedence over local
# and global versions.
#
# For backwards compatibility, mammoth will also read version
# specifications from `.mammoth-version' files, but a `.php-version'
# file in the same directory takes precedence.
#
# <version> should be a string matching a PHP version known to mammoth.
# The special version string `system' will use your default system PHP.
# Run `mammoth versions' for a list of available PHP versions.

set -e
[ -n "$MAMMOTH_DEBUG" ] && set -x

# Provide mammoth completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  exec mammoth-versions --bare
fi

MAMMOTH_VERSION="$1"

if [ "$MAMMOTH_VERSION" = "--unset" ]; then
  rm -f .php-version .mammoth-version
  MAMMOTH_VERSION=""
elif [ -n "$MAMMOTH_VERSION" ]; then
  if [ "$(MAMMOTH_VERSION= mammoth-version-origin)" -ef .mammoth-version ]; then
    rm -f .mammoth-version
    { echo "mammoth: removed existing \`.mammoth-version' file and migrated"
      echo "       local version specification to \`.php-version' file"
    } >&2
  fi
  mammoth-version-file-write .php-version "$MAMMOTH_VERSION"
  echo "$MAMMOTH_VERSION" >&2
fi
if [ -z "$MAMMOTH_VERSION" ]; then
  mammoth-version-file-read .php-version ||
  mammoth-version-file-read .mammoth-version ||
  { echo "mammoth: no local version configured for this directory"
    exit 1
  } >&2
fi
